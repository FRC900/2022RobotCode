<?xml version="1.0"?>
<launch>

	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

	<arg name="hw_or_sim" default="hw" />
	<arg name="static_map" default="True"/>

        <!--machine name="roboRIO" address="10.9.0.2" env-loader="/home/admin/2023RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="admin" password="admin"/-->

        <!--include file="$(find controller_node)/launch/record_offseason.launch"/-->
	
        <!-- Jetson 1 Sensors-->
        <!--include file="$(find controller_node)/launch/sick_tim571_2050101.launch"/-->
        <!-- <include file="$(find controller_node)/launch/cube_detection.launch"/> -->
	<!--
	<include file="$(find controller_node)/launch/ar_zed.launch"/>
        <include file="$(find ti_mmwave_rospkg)/launch/rviz_1443_3d.launch"/>
	-->
	<group ns="frcrobot">
		<!-- Load controller settings -->
		<rosparam file="$(find ros_control_boilerplate)/config/2018_offseason_main.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/talon_swerve_offsets_new_1.yaml" command="load"/> <!-- not updated to offseason-->
		<rosparam file="$(find ros_control_boilerplate)/config/2018_offseason_swerve.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller.yaml" command="load"/>
        <rosparam file="$(find robot_visualizer)/config/robot_visualize.yaml" command="load"/>
        <rosparam file="$(find compressor_control_node)/config/regulate_compressor.yaml" command="load"/>
        <rosparam file="$(find behaviors)/config/autoInterpreterServer.yaml" command="load"/>


		<!-- Load hardware interface -->
		<!--node machine="roboRIO" name="frcrobot_$(arg hw_or_sim)_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
			output="screen" launch-prefix="$(arg launch_prefix)">
		</node-->

		<!-- Load controller manager -->
		<!--node machine="roboRIO" name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" args="spawn joint_state_controller talon_state_controller talon_config_controller imu_sensor_controller pdp_state_controller compressor_controller robot_code_ready_controller arm_controller swerve_drive_controller intake_controller" /-->

		<!--node name="teleop_joystick_offseason" pkg="teleop_joystick_control" type="teleop_joystick_offseason" output="screen" /-->
        <node name="regulate_compressor" pkg="compressor_control_node" type="regulate_compressor" output="screen"/>
        <node name="arm_server_node" pkg="behaviors" type="arm_server_node" output="screen"/>
        <node name="intake_server_node" pkg="behaviors" type="intake_server_node" output="screen"/>
        <node name="forearm_server_node" pkg="behaviors" type="forearm_server_node" output="screen"/>
		<node name="path_to_goal_server" pkg="path_to_goal" type="path_to_goal_server" output="screen"/>


		<node name="point_gen" pkg="swerve_point_generator" type="point_gen" output="screen" />
	
		<!--node name="map_server" pkg="map_server" type="map_server" args="$(find controller_node)/maps/2018FRC_field.yaml" output="screen" if="$(arg static_map)">
			<param name="frame_id" value="/map"/>
		</node-->

        <node name="base_trajectory_node" pkg="base_trajectory" type="base_trajectory_node" output="screen" > </node> 
		<node name="robot_visualize" pkg="robot_visualizer" type="robot_visualize" output="screen" />
		<node name="profile_follow" pkg="robot_visualizer" type="profile_follow" output="screen" />

		<node name="smach_example_state_machine" pkg="auto_preseason" type="auto_example.py" output="screen"/>

	</group>

    <!-- Heartbeat Nodes -->
    <group ns="rio">
        <!--node machine="roboRIO" name="heartbeat_rio" pkg="heartbeat_node" type="heartbeat" output="screen" /-->
    </group>

    <group ns="jetson_1">
        <node name="heartbeat_jetson_1" pkg="heartbeat_node" type="heartbeat" output="screen" />
    </group>

    <!-- jetson 2 stuffs -->
	<!-- <machine name="jetson_2" address="10.9.0.9" env-loader="/home/ubuntu/2023RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="ubuntu" password="ubuntu" default="true"/>
         Jetson 2 Sensors
        <include file="$(find controller_node)/launch/rplidar.launch"/>
        <group ns="jetson_2">
            <node name="heartbeat_jetson_2" pkg="heartbeat_node" type="heartbeat" output="screen" />
		</group>-->

</launch>
