# Top-level world file for the rapid react field stage simulation
include "robots/2022FRC_robot.inc"

# Object detection model - used as a base for each target
# we can detect using tensorflow object detection
# TODO - maybe also retro targets?
define objdet_target model
(
 size [ 0.200 0.200 0.050 ]
 gui_move 0
 gui_nose 0
 gripper_return 1
 ranger_return -1.000
)

# Model for the basic floorplan - walls, and field obstacles
define floorplan model
(
  # sombre, sensible, artistic
  color "gray30"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 0
  gui_outline 0
  gripper_return 1
  fiducial_return -1
  ranger_return 1.000
)

resolution 0.02
interval_sim 5 # simulation timestep in milliseconds
interval_real 5
threads 2

window
(
  size [ 1299  609 ]
  center [ 0.000 0.000 ]
  rotate [ 0.000 0.000 ]
  scale 60.000
)

# Size determines how pixels map to meters
# Pose fixes the center of the field
# PNG is black and white image
floorplan
(
  name "rapid_react_field_map"
  bitmap "../maps/rapid_react_field_cad_cropped.png"
  size [16.459 8.205 0.300] #[24.6888 33.5274 4] x, y, size of the map (meters)
  pose [ 8.2296  4.1148  0.000 0.000 ] #[  4.1148 8.5341  0.0 0.0 ] x, y, z, rotation
)

# throw in a robot
omnidir_robot
(
  # Everything but slalom
  pose [ 1.041 2.286 0.000 0.000 ]
  # Slalom pose [ 1.0414 .762 0.0 0.0 ]
  name "robot"
)

# Simulated AR tags
objdet_target(pose[126.879, 11.74, 8.73] fiducial_return 3 color 'green')	
objdet_target(pose[126.879, 108.24, 8.73] fiducial_return 3 color 'green')	
objdet_target(pose[520.899, 312.24, 8.73] fiducial_return 4 color 'orange')	
objdet_target(pose[520.899, 215.74, 8.73] fiducial_return 4 color 'orange')	
objdet_target(pose[336.038, 130.345, 13.036773] fiducial_return 5 color 'green')	
objdet_target(pose[311.7395, 193.655, 11.2529165] fiducial_return 5 color 'cyan')	
objdet_target(pose[-270.132, 59.392, 0.125] fiducial_return 6 color 'green')	
objdet_target(pose[-213.113, 119.477, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-215.281, 202.282, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-221.28, 215.757, 0.125] fiducial_return 6 color 'red')	
objdet_target(pose[-282.142, 270.755, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-364.171092, 270.607748, 0.125] fiducial_return 6 color 'green')	
objdet_target(pose[-283.606, 53.392, 0.125] fiducial_return 7 color 'green')	
objdet_target(pose[-366.412, 51.224, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-426.497, 108.243, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-432.496, 121.718, 0.125] fiducial_return 7 color 'red')	
objdet_target(pose[-434.665, 204.523, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-378.256, 261.0602375, 0.125] fiducial_return 7 color 'green')	
objdet_target(pose[−295.492813, 116.353, 22.563] fiducial_return 8 color 'green')	
objdet_target(pose[-308.967, 110.354, 22.563] fiducial_return 8 color 'green')	
objdet_target(pose[-369.763749, 133.502192, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-375.763115, 146.976987, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-352.158172, 207.976683, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-339.140149, 213.772681, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-278.013751, 190.497808, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-272.116069, 177.251399, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[129.808, 11.74, 48.151] fiducial_return 11 color 'cyan')	
objdet_target(pose[129.808, 104.74, 48.151] fiducial_return 11 color 'green')	
objdet_target(pose[517.97, 312.24, 48.151] fiducial_return 28 color 'cyan')	
objdet_target(pose[517.97, 215.99, 48.151] fiducial_return 28 color 'cyan')	
objdet_target(pose[127.004, 102.99, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[127.004, 112.99, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 112.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[127.004, 102.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[127.004, 6.74, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[127.004, 16.74, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 16.74, 62.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 6.74, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 220.99, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[520.774, 210.99, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[520.774, 210.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 220.99, 62.932] fiducial_return 25 color 'red')	
objdet_target(pose[520.774, 317.24, 72.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 307.24, 72.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 307.24, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 317.24, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[235.586, 37.054, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[349.799, 11.21, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[448.835, 73.697, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[453.285, 243.643, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[357.655, 311.227, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[174.661, 195.767, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[605.969, 44.275, 4.75] fiducial_return 13 color 'orange')	
objdet_target(pose[-560.789443, 210, 560.789443] fiducial_return 18 color 'orange')	
objdet_target(pose[194.492393, 80.357, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[290.122, 12.773, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[473.116, 128.233, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[412.192, 286.946, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[297.978, 312.79, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[198.943, 250.303, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[41.808, 279.725, 4.719] fiducial_return 16 color 'cyan')	
objdet_target(pose[-86.988058, 114, 86.988058] fiducial_return 17 color 'blue')	
objdet_target(pose[-0.097, 238.3241285, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-81.006, 322.839, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-566.771, 1.161, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-647.68, 85.6758715, 0.103] fiducial_return 19 color 'green')	
objdet_target(pose[-432.550986, 162, 0.125] fiducial_return 27 color 'cyan')	
objdet_target(pose[-215.226514, 162, 0.125] fiducial_return 9 color 'green')	


# Game pieces
# Numeric IDs get mapped to IDs in 2022Game_label_map.pbtxt
objdet_target(pose[126.879, 11.74, 8.73] fiducial_return 3 color 'green')	
objdet_target(pose[126.879, 108.24, 8.73] fiducial_return 3 color 'green')	
objdet_target(pose[520.899, 312.24, 8.73] fiducial_return 4 color 'orange')	
objdet_target(pose[520.899, 215.74, 8.73] fiducial_return 4 color 'orange')	
objdet_target(pose[336.038, 130.345, 13.036773] fiducial_return 5 color 'green')	
objdet_target(pose[311.7395, 193.655, 11.2529165] fiducial_return 5 color 'cyan')	
objdet_target(pose[-270.132, 59.392, 0.125] fiducial_return 6 color 'green')	
objdet_target(pose[-213.113, 119.477, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-215.281, 202.282, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-221.28, 215.757, 0.125] fiducial_return 6 color 'red')	
objdet_target(pose[-282.142, 270.755, 0.125] fiducial_return 6 color 'cyan')	
objdet_target(pose[-364.171092, 270.607748, 0.125] fiducial_return 6 color 'green')	
objdet_target(pose[-283.606, 53.392, 0.125] fiducial_return 7 color 'green')	
objdet_target(pose[-366.412, 51.224, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-426.497, 108.243, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-432.496, 121.718, 0.125] fiducial_return 7 color 'red')	
objdet_target(pose[-434.665, 204.523, 0.125] fiducial_return 7 color 'cyan')	
objdet_target(pose[-378.256, 261.0602375, 0.125] fiducial_return 7 color 'green')	
objdet_target(pose[−295.492813, 116.353, 22.563] fiducial_return 8 color 'green')	
objdet_target(pose[-308.967, 110.354, 22.563] fiducial_return 8 color 'green')	
objdet_target(pose[-369.763749, 133.502192, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-375.763115, 146.976987, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-352.158172, 207.976683, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-339.140149, 213.772681, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-278.013751, 190.497808, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[-272.116069, 177.251399, 22.3125] fiducial_return 8 color 'green')	
objdet_target(pose[129.808, 11.74, 48.151] fiducial_return 11 color 'cyan')	
objdet_target(pose[129.808, 104.74, 48.151] fiducial_return 11 color 'green')	
objdet_target(pose[517.97, 312.24, 48.151] fiducial_return 28 color 'cyan')	
objdet_target(pose[517.97, 215.99, 48.151] fiducial_return 28 color 'cyan')	
objdet_target(pose[127.004, 102.99, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[127.004, 112.99, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 112.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[127.004, 102.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[127.004, 6.74, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[127.004, 16.74, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 16.74, 62.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[127.004, 6.74, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 220.99, 72.932] fiducial_return 25 color 'red')	
objdet_target(pose[520.774, 210.99, 72.932] fiducial_return 25 color 'cyan')	
objdet_target(pose[520.774, 210.99, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 220.99, 62.932] fiducial_return 25 color 'red')	
objdet_target(pose[520.774, 317.24, 72.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 307.24, 72.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 307.24, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[520.774, 317.24, 62.932] fiducial_return 25 color 'green')	
objdet_target(pose[235.586, 37.054, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[349.799, 11.21, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[448.835, 73.697, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[453.285, 243.643, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[357.655, 311.227, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[174.661, 195.767, 4.75] fiducial_return 13 color 'red')	
objdet_target(pose[605.969, 44.275, 4.75] fiducial_return 13 color 'orange')	
objdet_target(pose[-560.789443, 210, 560.789443] fiducial_return 18 color 'orange')	
objdet_target(pose[194.492393, 80.357, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[290.122, 12.773, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[473.116, 128.233, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[412.192, 286.946, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[297.978, 312.79, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[198.943, 250.303, 4.719] fiducial_return 16 color 'blue')	
objdet_target(pose[41.808, 279.725, 4.719] fiducial_return 16 color 'cyan')	
objdet_target(pose[-86.988058, 114, 86.988058] fiducial_return 17 color 'blue')	
objdet_target(pose[-0.097, 238.3241285, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-81.006, 322.839, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-566.771, 1.161, 0.103] fiducial_return 19 color 'cyan')	
objdet_target(pose[-647.68, 85.6758715, 0.103] fiducial_return 19 color 'green')	
objdet_target(pose[-432.550986, 162, 0.125] fiducial_return 27 color 'cyan')	
objdet_target(pose[-215.226514, 162, 0.125] fiducial_return 9 color 'green')	
