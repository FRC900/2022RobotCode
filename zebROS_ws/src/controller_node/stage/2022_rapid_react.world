# Top-level world file for the rapid react field stage simulation
include "robots/2020FRC_robot.inc"

# Object detection model - used as a base for each target
# we can detect using tensorflow object detection
# TODO - maybe also retro targets?
define objdet_target model
(
 size [ 0.20 0.20 0.05 ]
 gui_move 0
 gui_nose 0
 gripper_return -1
 ranger_return -1
)

# Model for the basic floorplan - walls, and field obstacles
define floorplan model
(
  # sombre, sensible, artistic
  color "gray30"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 0
  gui_outline 0
  gripper_return -1
  fiducial_return -1
  ranger_return 1
)

resolution 0.02
interval_sim 5  # simulation timestep in milliseconds
interval_real 5
threads 2

window
(
  size [ 1200.0  600.0 ]
  center [ 0.0 0.0 ]
  rotate [ 0.0 0.0 ]
  scale 60
)

# Size determines how pixels map to meters
# Pose fixes the center of the field
# PNG is black and white image
floorplan
(
  name "rapid_react_field_map"
  bitmap "../maps/rapid_react_field_cad.png"
  size [ 27.432 22.86 4 ]
  pose [  4.572  2.286  0.0 0.0 ]
)

# throw in a robot
omnidir_robot
(
  # Everything but slalom
  pose [ 1.0414 2.286 0.0 0.0 ]
  # Slalom pose [ 1.0414 .762 0.0 0.0 ]
  name "robot"
)

# Simulated AR tags
objdet_target ( pose [ -1.72 -0.2   1 0 ] fiducial_return 1 color "cyan")
objdet_target ( pose [ -1.72  0.48  1 0 ] fiducial_return 0 color "yellow")
objdet_target ( pose [ -1.72  1.145 1 0 ] fiducial_return 2 color "green")
objdet_target ( pose [ -1.72  1.638 1 0 ] fiducial_return 4 color "blue")
objdet_target ( pose [ -1.72  2.263 1 0 ] fiducial_return 5 color "purple")
objdet_target ( pose [ -1.72  3.103 1 0 ] fiducial_return 3 color "orange")
