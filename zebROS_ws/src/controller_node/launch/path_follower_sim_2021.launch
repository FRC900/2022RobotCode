<?xml version="1.0"?>
<!--
  Simulate a omni (swerve) robot in stage for path following testing
 -->
<launch>
	<!-- useful for running sim stuff on a laptop and path follower on a jetson -->
	<arg name="run_path_follower" default="True" />
	<arg name="run_hold_position" default="True" />
	<!--  ************** Global Parameters ***************  -->
	<param name="/use_sim_time" value="true"/>

	<!--  ************** Stage Simulator ***************  -->
	<node pkg="stage_ros" type="stageros" name="stageros" args="$(find controller_node)/stage/2021PathFollower.world" output="screen">
		<remap from="base_scan" to="scan"/>
		<remap from="odom" to="/frcrobot_jetson/swerve_drive_controller/odom"/>
	</node>

	<!--  ************** Nodes to convert output of stage to inputs expected by particle filter ***************  -->
	<node pkg="pf_localization" type="fake_cmd_vel_out_node" name="fake_cmd_vel_out" >
		<remap from="cmd_vel_out" to="/frcrobot_jetson/swerve_drive_controller/cmd_vel_out"/>
	</node>

	<group ns="imu">
		<node pkg="pf_localization" type="fake_imu_node" name="fake_imu" >
			<remap from="imu" to="/imu/imu/data" />
			<remap from="/imu/base_pose_ground_truth" to="/base_pose_ground_truth" />
		</node>

		<node pkg="imu_zero" type="imu_zero_node" name="imu_zero" >
		</node>
	</group>

	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" >
		<arg name="port" value="5803"/>
	</include>

	<!--
	<include file="$(find controller_node)/launch/fuse_odom.launch"/>
	-->
	<!--
	<node pkg="tf2_ros" type="static_transform_publisher" name="link_basetoimu" args="0 0 0 0 0 0 1 base_link imu" />
	<node pkg="tf2_ros" type="static_transform_publisher" name="static_arzedmap" args="0 0 0 0 0 0 zed_ar_odom base_link" />
	-->
	<node pkg="tf" type="static_transform_publisher" name="link_basetoimu" args="0 0 0 0 0 0 1 base_link imu 100" />

	<!-- stage publishes an odom->base_footprint transform.  Link zed_ar_odom to odom using an identity transform.
		 Same with base_footprint to base_link
         This makes the map->zed_ar_odom->base_link relationship from the real robot the same here, with some extra
         0,0,0... transforms tying everything together.
		 Use the TF broadcaster rather than tf2_ros since costmap2d seems to think that static transform broadcasts
         are too old to use?
	-->
	<node pkg="tf" type="static_transform_publisher" name="static_arzedodom" args="0 0 0 0 0 0 zed_ar_odom odom 100" />
	<node pkg="tf" type="static_transform_publisher" name="static_basefootprintlink" args="0 0 0 0 0 0 base_footprint base_link 100" />
	<group ns="robot_state">
		<param name="robot_description" command="$(find xacro)/xacro '$(find controller_node)/urdf/2021_compbot.xacro'" />
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	</group>

	<node pkg="pf_localization" type="fake_goal_detect_node" name="fake_goal_detect" >
		<remap from="goal_detect_msg" to="/goal_detection/goal_detect_msg" />
	</node>

	<rosparam file="$(find pf_localization)/config/skills_challenge_params.yaml" command="load"/>
	<node pkg="pf_localization" type="pf_localization_node" name="pf_localization" output="screen" >
	</node>
	<!--
	-->

	<!-- set up auto node to create paths -->
	<include file="$(find behaviors)/launch/auto_node.launch"/>

	<include file="$(find controller_node)/launch/path_follower.launch" if="$(eval arg('run_path_follower'))">
		<!--
		<arg name="odom_topic" value="/odom"/>
		-->
		<arg name="use_pose_for_odom" value="false"/>
	</include>
	<include file="$(find controller_node)/launch/hold_position.launch" if="$(eval arg('run_hold_position'))">
		<arg name="use_pose_for_odom" value="false"/>
	</include>
	<!-- Super sketchy way to hook up cmd vel output from path follower to stage /cmd_vel topic
		 I could say this is because it is a closer match to the real robot but it is really just
         being reused out of laziness.
	-->
	<group ns="cmd_vel_mux">
		<node name="twist_mux" pkg="twist_mux" type="twist_mux">
			<rosparam command="load" file="$(find talon_swerve_drive_controller)/config/twist_mux.yaml"/>
			<remap from="cmd_vel_out" to="/cmd_vel"/>
		</node>

		<node pkg="rqt_driver_station_sim" type="rqt_driver_station_sim" name="rqt_driver_station_sim" >
			<remap from="/frcrobot_rio/match_data_in" to="/frcrobot_rio/match_data" />
		</node>
	</group>
</launch>
